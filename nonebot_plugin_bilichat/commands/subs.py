from nonebot.adapters import Message
from nonebot.exception import FinishedException
from nonebot.params import CommandArg, Depends
from nonebot.permission import SUPERUSER

from ..config import plugin_config
from ..lib.uid_extract import uid_extract
from ..subscribe.manager import SubscriptionSystem, Uploader, User
from .base import bilichat, get_user

bili_add_sub = bilichat.command("sub", permission=SUPERUSER, aliases=set(plugin_config.bilichat_cmd_add_sub))
bili_remove_sub = bilichat.command("unsub", permission=SUPERUSER, aliases=set(plugin_config.bilichat_cmd_remove_sub))
bili_check_sub = bilichat.command("check", aliases=set(plugin_config.bilichat_cmd_check_sub))
bili_at_all = bilichat.command("atall", permission=SUPERUSER, aliases=set(plugin_config.bilichat_cmd_at_all))


@bili_add_sub.handle()
async def add_sub(uid: Message = CommandArg(), user: User = Depends(get_user)):
    # Ëé∑Âèñ UP ÂØπË±°
    if not uid:
        await bili_add_sub.finish("ËØ∑ËæìÂÖ•UP‰∏ªÁöÑÊòµÁß∞Âë¢\n`(*>Ôπè<*)‚Ä≤")
    msg = await uid_extract(uid.extract_plain_text())
    if isinstance(msg, str):
        await bili_add_sub.finish(msg)
        raise FinishedException
    up = SubscriptionSystem.uploaders.get(msg.mid, Uploader(nickname=msg.nickname, uid=msg.mid))

    msg = user.add_subscription(up) or f"Â∑≤ÁªèÊàêÂäüÂÖ≥Ê≥® {up} Âï¶\n(*^‚ñΩ^*)"
    await bili_add_sub.finish(msg)


@bili_remove_sub.handle()
async def remove_sub(msg: Message = CommandArg(), user: User = Depends(get_user)):
    # Ëé∑Âèñ UP ÂØπË±°
    if not msg:
        await bili_add_sub.finish("ËØ∑ËæìÂÖ•UP‰∏ªÁöÑÊòµÁß∞Êàñ UID Âë¢\n`(*>Ôπè<*)‚Ä≤")
    keyword = msg.extract_plain_text().lower()
    for up in SubscriptionSystem.uploaders.values():
        if up.nickname.lower() == keyword or str(up.uid) == keyword:
            re_msg = user.remove_subscription(up) or f"Â∑≤ÁªèÊàêÂäüÂèñÂÖ≥ {up} Âï¶\n(*^‚ñΩ^*)"
            await bili_add_sub.finish(re_msg)
    await bili_add_sub.finish("Êú™ÊâæÂà∞ËØ• UP ‰∏ªÂë¢\n`(*>Ôπè<*)‚Ä≤")


@bili_check_sub.handle()
async def check_sub(user: User = Depends(get_user)):
    if not user.subscriptions:
        await bili_check_sub.finish("Êú¨Áæ§Âπ∂Êú™ËÆ¢ÈòÖ‰ªª‰ΩïUP‰∏ªÂë¢...\n`(*>Ôπè<*)‚Ä≤")
    ups = user.subscribe_ups
    ups_prompt = []
    for index, up in enumerate(ups):
        text = f"{index+1}."
        # at ÂÖ®‰ΩìÊàêÂëò
        if user.subscriptions.get(up.uid, {}).get("at_all"):
            text += "üì¢ "
        text += f"{str(up)}"
        ups_prompt.append(text)

    await bili_check_sub.finish(f"Êú¨Áæ§ÂÖ±ËÆ¢ÈòÖ {len(ups)} ‰∏™ UP:\n" + "\n".join(ups_prompt))


@bili_at_all.handle()
async def at_all(
    user: User = Depends(get_user),
    msg: Message = CommandArg(),
):
    keyword = msg.extract_plain_text().lower().strip()
    if keyword in ("ÂÖ®Â±Ä", "ÂÖ®‰Ωì", "all"):
        if user.at_all:
            user.at_all = False
            re_msg = "Â∑≤ÂÖ≥Èó≠ÂÖ®Â±Ä@ÂÖ®‰ΩìÊàêÂëò‰∫Ü~\n(*^‚ñΩ^*)"
        else:
            user.at_all = True
            re_msg = "Â∑≤ÂºÄÂêØÂÖ®Â±Ä@ÂÖ®‰ΩìÊàêÂëò‰∫Ü~\n(*^‚ñΩ^*)"
    else:
        re_msg = "Êú™ÊâæÂà∞ËØ• UP ‰∏ªÂë¢\n`(*>Ôπè<*)‚Ä≤"
        for up in SubscriptionSystem.uploaders.values():
            if up.nickname.lower() == keyword or str(up.uid) == keyword:
                cfg = user.subscriptions.get(up.uid, {"at_all": False})
                if cfg["at_all"] is True:
                    cfg["at_all"] = False
                    user.subscriptions.update({up.uid: cfg})
                    re_msg = f"Â∑≤ÂÖ≥Èó≠ {up.nickname}({up.uid}) ÁöÑ@ÂÖ®‰ΩìÊàêÂëò‰∫Ü~\n(*^‚ñΩ^*)"
                else:
                    cfg["at_all"] = True
                    user.subscriptions.update({up.uid: cfg})
                    re_msg = f"Â∑≤ÂºÄÂêØ {up.nickname}({up.uid}) ÁöÑ@ÂÖ®‰ΩìÊàêÂëò‰∫Ü~\n(*^‚ñΩ^*)"
    SubscriptionSystem.save_to_file()
    await bili_at_all.finish(re_msg)
